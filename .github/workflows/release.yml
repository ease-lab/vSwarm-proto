# MIT License
#
# Copyright (c) 2022 EASE lab
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


name: Release

on:
  workflow_dispatch:

  pull_request:
  # For all pushed tags
  push:
    tags:
      - '*'

env:
  GOOS: linux
  GO111MODULE: on


jobs:
  build_release:
    name: build_release
    runs-on: ubuntu-20.04
    steps:

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      ## Test and build artifacts
      - uses: actions/checkout@v3

      - name: Install protoc
        run: |
          PROTOC_ZIP=protoc-3.14.0-linux-x86_64
          curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v3.14.0/$PROTOC_ZIP.zip
          unzip -o $PROTOC_ZIP.zip -d $HOME/.local
          chmod +x $HOME/.local/bin/protoc
          rm -f $PROTOC_ZIP.zip

      - name: Install pipenv
        run: sudo apt install pipenv

      - name: Build protoc files
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.26
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.1
          chmod +x $(go env GOPATH)/bin/*
          export PATH="$PATH:$(go env GOPATH)/bin"

          make proto-all


      - name: Build test-client
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
        run: |
          make test-client

      - name: version
        run: echo "::set-output name=version::$(./client --version)"


      ## Create the release
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          # body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

      ## Finally upload the artifacts
      - name: upload linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./client
          asset_name: client-linux-amd64
          asset_content_type: application
